/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.slc.sw_formato_operaciones;

import javax.swing.JOptionPane;
import com.slc.sw_formato_operaciones.DAO.EmpleadoDAO;
import com.slc.sw_formato_operaciones.DAO.LocalDAO;
import com.slc.sw_formato_operaciones.DAO.MaquinaDAO;
import com.slc.sw_formato_operaciones.DAO.OperacionDAO;
import com.slc.sw_formato_operaciones.entities.Empleado;
import com.slc.sw_formato_operaciones.entities.Local;
import com.slc.sw_formato_operaciones.entities.Maquina;
import com.slc.sw_formato_operaciones.entities.Operacion;
import com.slc.sw_formato_operaciones.entities.Orden;
import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Clider Fernando Tutaya Rivera
 */
public class SecadoPanel extends javax.swing.JPanel {

    /**
     * Creates new form SecadoPanel
     */
    
    EmpleadoDAO empleadoDAO = new EmpleadoDAO();
    LocalDAO localDAO = new LocalDAO();
    MaquinaDAO maquinaDAO = new MaquinaDAO();
    OperacionDAO operacionDao = new OperacionDAO();
    
    DefaultTableModel defaultTableModel_Lavado = null;
    DefaultTableModel defaultTableModel_Secado = null;
    DefaultTableModel defaultTableModel_Doblado = null;
    
    public SecadoPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_procesoSecado = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jTextField_numOrden1_procesoSecado = new javax.swing.JTextField();
        jTextField_cantPrendas1_procesoSecado = new javax.swing.JTextField();
        jTextField_numOrden2_procesoSecado = new javax.swing.JTextField();
        jTextField_cantPrendas2_procesoSecado = new javax.swing.JTextField();
        jTextField_numOrden3_procesoSecado = new javax.swing.JTextField();
        jTextField_cantPrendas3_procesoSecado = new javax.swing.JTextField();
        jLabel_fecha_procesoSecado = new javax.swing.JLabel();
        jLabel_id_procesoSecado = new javax.swing.JLabel();
        jLabel_hora_procesoSecado = new javax.swing.JLabel();
        jComboBox_local_procesoSecado = new javax.swing.JComboBox<>();
        jComboBox_responsable_procesoSecado = new javax.swing.JComboBox<>();
        jComboBox_numSecadora_procesoSecado = new javax.swing.JComboBox<>();
        jCheckBox_estado_procesoSecado = new javax.swing.JCheckBox();
        jButton_Agregar_procesoSecado = new javax.swing.JButton();
        jButton_Nuevo_procesoSecado = new javax.swing.JButton();
        jButton_Actualizar_procesoSecado = new javax.swing.JButton();
        jButton_Eliminar_procesoSecado = new javax.swing.JButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SECADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        jTable_procesoSecado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_procesoSecadoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_procesoSecado);

        jTextField_numOrden1_procesoSecado.setText("jTextField1");
        jTextField_numOrden1_procesoSecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_numOrden1_procesoSecadoActionPerformed(evt);
            }
        });

        jTextField_cantPrendas1_procesoSecado.setText("jTextField1");

        jTextField_numOrden2_procesoSecado.setText("jTextField1");

        jTextField_cantPrendas2_procesoSecado.setText("jTextField1");

        jTextField_numOrden3_procesoSecado.setText("jTextField1");
        jTextField_numOrden3_procesoSecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_numOrden3_procesoSecadoActionPerformed(evt);
            }
        });

        jTextField_cantPrendas3_procesoSecado.setText("jTextField1");

        jLabel_fecha_procesoSecado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_fecha_procesoSecado.setText("Fecha");

        jLabel_id_procesoSecado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_id_procesoSecado.setText("0");

        jLabel_hora_procesoSecado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_hora_procesoSecado.setText("Hora");

        jComboBox_local_procesoSecado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_local_procesoSecado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_local_procesoSecadoItemStateChanged(evt);
            }
        });

        jComboBox_responsable_procesoSecado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox_numSecadora_procesoSecado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox_estado_procesoSecado.setText("Procesado");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_id_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_fecha_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_hora_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_local_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_numOrden1_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_cantPrendas1_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_numOrden2_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_cantPrendas2_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_numOrden3_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_cantPrendas3_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_numSecadora_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_responsable_procesoSecado, 0, 135, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_estado_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_numOrden1_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_cantPrendas1_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_numOrden2_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_cantPrendas2_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_numOrden3_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_cantPrendas3_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_fecha_procesoSecado)
                    .addComponent(jLabel_id_procesoSecado)
                    .addComponent(jLabel_hora_procesoSecado)
                    .addComponent(jComboBox_local_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_responsable_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_numSecadora_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_estado_procesoSecado))
                .addContainerGap())
        );

        jButton_Agregar_procesoSecado.setText("Agregar");
        jButton_Agregar_procesoSecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Agregar_procesoSecadoActionPerformed(evt);
            }
        });

        jButton_Nuevo_procesoSecado.setText("Nuevo");
        jButton_Nuevo_procesoSecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Nuevo_procesoSecadoActionPerformed(evt);
            }
        });

        jButton_Actualizar_procesoSecado.setText("Actualizar");
        jButton_Actualizar_procesoSecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Actualizar_procesoSecadoActionPerformed(evt);
            }
        });

        jButton_Eliminar_procesoSecado.setText("Eliminar");
        jButton_Eliminar_procesoSecado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Eliminar_procesoSecadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jButton_Nuevo_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jButton_Agregar_procesoSecado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Eliminar_procesoSecado)
                .addGap(78, 78, 78)
                .addComponent(jButton_Actualizar_procesoSecado)
                .addGap(56, 56, 56))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_Eliminar_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Actualizar_procesoSecado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_Nuevo_procesoSecado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_Agregar_procesoSecado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1370, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_procesoSecadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_procesoSecadoMouseClicked
        // TODO add your handling code here:
        int row = jTable_procesoSecado.getSelectedRow();

        String row_id = jTable_procesoSecado.getValueAt(row, 0).toString();
        String row_fecha = jTable_procesoSecado.getValueAt(row, 1).toString();
        String row_hora = jTable_procesoSecado.getValueAt(row, 2).toString();
        String row_local = jTable_procesoSecado.getValueAt(row, 3).toString();
        String row_numOrden1 = jTable_procesoSecado.getValueAt(row, 4).toString();
        String row_cantPrendas1 = jTable_procesoSecado.getValueAt(row, 5).toString();
        String row_numOrden2 = jTable_procesoSecado.getValueAt(row, 6).toString();
        String row_cantPrendas2 = jTable_procesoSecado.getValueAt(row, 7).toString();
        String row_numOrden3= jTable_procesoSecado.getValueAt(row, 8).toString();
        String row_cantPrendas3 = jTable_procesoSecado.getValueAt(row, 9).toString();
        String row_numLavadora = jTable_procesoSecado.getValueAt(row, 10).toString();
        String row_responsable = jTable_procesoSecado.getValueAt(row,11).toString();
        Boolean row_estado = (Boolean) jTable_procesoSecado.getValueAt(row, 12);

        System.out.print("valor del estado" + row_estado);
        jLabel_id_procesoSecado.setText(row_id);
        jLabel_fecha_procesoSecado.setText(row_fecha);
        jLabel_hora_procesoSecado.setText(row_hora);
        jComboBox_local_procesoSecado.setSelectedItem(row_local);
        jTextField_numOrden1_procesoSecado.setText(row_numOrden1);
        jTextField_cantPrendas1_procesoSecado.setText(row_cantPrendas1);
        jTextField_numOrden2_procesoSecado.setText(row_numOrden2);
        jTextField_cantPrendas2_procesoSecado.setText(row_cantPrendas2);
        jTextField_numOrden3_procesoSecado.setText(row_numOrden3);
        jTextField_cantPrendas3_procesoSecado.setText(row_cantPrendas3);
        jComboBox_numSecadora_procesoSecado.setSelectedItem(row_numLavadora);
        jComboBox_responsable_procesoSecado.setSelectedItem(row_responsable);
        jCheckBox_estado_procesoSecado.setSelected(row_estado);
    }//GEN-LAST:event_jTable_procesoSecadoMouseClicked

    private void jTextField_numOrden1_procesoSecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_numOrden1_procesoSecadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_numOrden1_procesoSecadoActionPerformed

    private void jTextField_numOrden3_procesoSecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_numOrden3_procesoSecadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_numOrden3_procesoSecadoActionPerformed

    private void jComboBox_local_procesoSecadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_local_procesoSecadoItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {

            // Obtener el valor seleccionado
            String local = jComboBox_local_procesoSecado.getSelectedItem().toString();

            // Limpiar las opciones anteriores del comboBox de lavadoras
            jComboBox_numSecadora_procesoSecado.removeAllItems();

            // Consultar las máquinas en función del valor seleccionado y un tipo
            List<Maquina> maquinas = maquinaDAO.getMaquinaByLocalAndType(local, "secadora");

            // Agregar las máquinas encontradas al comboBox
            maquinas.forEach(maquina -> jComboBox_numSecadora_procesoSecado.addItem(maquina.getName()));
        }

    }//GEN-LAST:event_jComboBox_local_procesoSecadoItemStateChanged

    private void jButton_Agregar_procesoSecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Agregar_procesoSecadoActionPerformed
        // TODO add your handling code here:

        if(jTable_procesoSecado.getSelectedRow() == -1){
            String cboLocal = jComboBox_local_procesoSecado.getSelectedItem().toString();

            String txtOrden1 = jTextField_numOrden1_procesoSecado.getText();
            String txtCant1 = !"".equals(jTextField_cantPrendas1_procesoSecado.getText()) ? jTextField_cantPrendas1_procesoSecado.getText() : "0";

            Orden orden1 = new Orden(txtOrden1,Integer.parseInt( txtCant1 ));

            String txtOrden2 = jTextField_numOrden2_procesoSecado.getText();
            String txtCant2 = !"".equals(jTextField_cantPrendas2_procesoSecado.getText()) ? jTextField_cantPrendas2_procesoSecado.getText() : "0" ;

            Orden orden2 = new Orden(txtOrden2, Integer.parseInt(txtCant2));

            String txtOrden3 = jTextField_numOrden3_procesoSecado.getText();
            String txtCant3 = !"".equals(jTextField_cantPrendas3_procesoSecado.getText()) ? jTextField_cantPrendas3_procesoSecado.getText() : "0" ;

            Orden orden3 = new Orden(txtOrden3, Integer.parseInt(txtCant3));

            String cboNumLavadora = jComboBox_numSecadora_procesoSecado.getSelectedItem().toString();

            String cboResponsable = jComboBox_responsable_procesoSecado.getSelectedItem().toString();

            Boolean checkEstado = jCheckBox_estado_procesoSecado.isSelected();

            //Crear objetos a partir para la superclase Operacion:
            List<Orden> listaOrdenes = new ArrayList<>();
            listaOrdenes.add(orden1);
            listaOrdenes.add(orden2);
            listaOrdenes.add(orden3);

            //Crear operacion solo si al menos hay un campo numero de Orden
            if(!txtOrden1.isEmpty() || !txtOrden1.isEmpty() || !txtOrden1.isEmpty()){
                Local local = localDAO.getLocalByName(cboLocal);
                Maquina lavadora = maquinaDAO.getMaquinaByLocalAndTypeAndName( cboLocal, "secadora", cboNumLavadora);

                Empleado empleado = empleadoDAO.getEmpleadoByNombresAndApellidos(cboResponsable.split(",")[0], cboResponsable.split(",")[1]);

                Operacion operacion = new Operacion("Secado", local, listaOrdenes, lavadora,empleado, checkEstado);

                //Asignar la operacion con la que cada entidad se corresponde para evitar errores de persistencia
                listaOrdenes.forEach(orden -> orden.setOperacion(operacion));

                try {
                    if(operacionDao.addOperacion(operacion)){
                        JOptionPane.showMessageDialog(this, "Registro Agregado", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
                        cargarTabla_TabSecado();
                    }else{
                        JOptionPane.showMessageDialog(this, "No se pudo agregar el Registro, Verifique los Datos", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (HeadlessException e) {
                    System.out.println("Error al insertar orden" + e.getMessage());
                }

                limpiarCamposTabSecado();

            }else{
                //Mensaje de Error
                JOptionPane.showMessageDialog(this, "Ingrese al Menos un Numero de Orden!","Mensaje de Error", JOptionPane.ERROR_MESSAGE);
            }

        }else{
            JOptionPane.showMessageDialog(this, "El Registro ya fue Agregado", "Mensaje de Advertencia", JOptionPane.WARNING_MESSAGE);

        }

    }//GEN-LAST:event_jButton_Agregar_procesoSecadoActionPerformed

    private void jButton_Nuevo_procesoSecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Nuevo_procesoSecadoActionPerformed
        // TODO add your handling code here:
        limpiarCamposTabSecado();
        cargarTabla_TabSecado();
    }//GEN-LAST:event_jButton_Nuevo_procesoSecadoActionPerformed

    private void jButton_Actualizar_procesoSecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Actualizar_procesoSecadoActionPerformed
        // TODO add your handling code here:
        int rowSelected = jTable_procesoSecado.getSelectedRow();

        if( rowSelected >= 0 ){
            Operacion existOp = new OperacionDAO().getOperacionById(Long.valueOf(jTable_procesoSecado.getValueAt(rowSelected, 0).toString()));
            // Obtener los datos de los componentes
            Long labelId = Long.valueOf(jLabel_id_procesoSecado.getText() );
            String cboLocal = jComboBox_local_procesoSecado.getSelectedItem().toString();
            String txtOrden1 = jTextField_numOrden1_procesoSecado.getText();
            String txtCant1 = !"".equals(jTextField_cantPrendas1_procesoSecado.getText()) ? jTextField_cantPrendas1_procesoSecado.getText() : "0";
            Orden orden1 = new Orden(txtOrden1,Integer.parseInt( txtCant1 ));
            String txtOrden2 = jTextField_numOrden2_procesoSecado.getText();
            String txtCant2 = !"".equals(jTextField_cantPrendas2_procesoSecado.getText()) ? jTextField_cantPrendas2_procesoSecado.getText() : "0";
            Orden orden2 = new Orden(txtOrden2, Integer.parseInt(txtCant2));
            String txtOrden3 = jTextField_numOrden3_procesoSecado.getText();
            String txtCant3 = !"".equals(jTextField_cantPrendas3_procesoSecado.getText()) ? jTextField_cantPrendas3_procesoSecado.getText() : "0";
            Orden orden3 = new Orden(txtOrden3, Integer.parseInt(txtCant3));
            String cboNumSecadora = jComboBox_numSecadora_procesoSecado.getSelectedItem().toString();
            String cboResponsable = jComboBox_responsable_procesoSecado.getSelectedItem().toString();
            Boolean estado = jCheckBox_estado_procesoSecado.getModel().isSelected();

            List<Orden> listaOrdenes = new ArrayList<>();
            listaOrdenes.add(orden1);
            listaOrdenes.add(orden2);
            listaOrdenes.add(orden3);
            Local local = localDAO.getLocalByName(cboLocal);
            Maquina lavadora = maquinaDAO.getMaquinaByLocalAndTypeAndName( cboLocal, "secadora", cboNumSecadora);
            String nombres = cboResponsable.split(",")[0];
            String apellidos = cboResponsable.split(",")[1];
            Empleado empleado = empleadoDAO.getEmpleadoByNombresAndApellidos(nombres, apellidos);
            if(existOp != null){

                //Crear operacion
                Operacion operacion = new Operacion( labelId, "Secado", local, listaOrdenes, lavadora,empleado, estado);
                //Asignar la operacion con la que cada entidad se corresponde para evitar errores de persistencia
                listaOrdenes.forEach(orden -> orden.setOperacion(operacion));

                try {
                    if(operacionDao.updateOperacion(operacion) == true){
                        JOptionPane.showMessageDialog(this, "Registro Actualizado con Exito.", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
                        cargarTabla_TabSecado();
                    }else{
                        JOptionPane.showMessageDialog(this, "No se pudo Actualizar el registro, Revise los datos","Mensaje de Error", JOptionPane.ERROR_MESSAGE);

                    }

                } catch (HeadlessException e) {
                    System.out.println("Error al insertar orden" + e.getMessage());
                }
                limpiarCamposTabSecado();
                cargarTabla_TabSecado();

            }else{
                JOptionPane.showMessageDialog(null, "No Existe el Registro para Actualizar", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);

            }

        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un Registro para Actualizar", "Mensaje de Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_Actualizar_procesoSecadoActionPerformed

    private void jButton_Eliminar_procesoSecadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Eliminar_procesoSecadoActionPerformed
        // TODO add your handling code here:
        int rowSelected = jTable_procesoSecado.getSelectedRow();

        if( rowSelected >= 0 ){
            int response = JOptionPane.showConfirmDialog(this, "¿Eliminar Registro?");
            System.out.println(response);
            if(response == JOptionPane.YES_OPTION){
                Long id = Long.valueOf(jTable_procesoSecado.getValueAt(rowSelected, 0).toString());
                try {
                    operacionDao.deleteOperacion(id);
                    limpiarCamposTabSecado();
                    cargarTabla_TabSecado();
                } catch (Exception e) {
                    System.out.println("Error al elminar Registro");
                }
            }else{
                System.out.println("No aceptado");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un registro para eliminar", "Mensaje de Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_Eliminar_procesoSecadoActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                // Llamar a los métodos en segundo plano
                limpiarCamposTabSecado();
                cargarTabla_TabSecado();
                return null;
            }

            @Override
            protected void done() {
                // Aquí puedes actualizar la interfaz si es necesario, una vez que los métodos terminen
                // Por ejemplo, mostrar un mensaje o actualizar algún componente visual
                System.out.println("Métodos ejecutados correctamente en segundo plano.");
            }
        };

        // Ejecutar el SwingWorker
        worker.execute();
    }//GEN-LAST:event_formAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Actualizar_procesoSecado;
    private javax.swing.JButton jButton_Agregar_procesoSecado;
    private javax.swing.JButton jButton_Eliminar_procesoSecado;
    private javax.swing.JButton jButton_Nuevo_procesoSecado;
    private javax.swing.JCheckBox jCheckBox_estado_procesoSecado;
    private javax.swing.JComboBox<String> jComboBox_local_procesoSecado;
    private javax.swing.JComboBox<String> jComboBox_numSecadora_procesoSecado;
    private javax.swing.JComboBox<String> jComboBox_responsable_procesoSecado;
    private javax.swing.JLabel jLabel_fecha_procesoSecado;
    private javax.swing.JLabel jLabel_hora_procesoSecado;
    private javax.swing.JLabel jLabel_id_procesoSecado;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_procesoSecado;
    private javax.swing.JTextField jTextField_cantPrendas1_procesoSecado;
    private javax.swing.JTextField jTextField_cantPrendas2_procesoSecado;
    private javax.swing.JTextField jTextField_cantPrendas3_procesoSecado;
    private javax.swing.JTextField jTextField_numOrden1_procesoSecado;
    private javax.swing.JTextField jTextField_numOrden2_procesoSecado;
    private javax.swing.JTextField jTextField_numOrden3_procesoSecado;
    // End of variables declaration//GEN-END:variables

    
    private void cargarTabla_TabSecado() {
        defaultTableModel_Secado = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Hace que todas las celdas sean no editables
                }

                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    if (columnIndex == 12) { // La columna "Estado" que tiene booleanos es la columna 12
                        return Boolean.class;
                    }
                    return super.getColumnClass(columnIndex);
                }
        };
        
        defaultTableModel_Secado.addColumn("N°");
        defaultTableModel_Secado.addColumn("Fecha");
        defaultTableModel_Secado.addColumn("Hora");
        defaultTableModel_Secado.addColumn("Local");
        defaultTableModel_Secado.addColumn("N° Orden 1");
        defaultTableModel_Secado.addColumn("Cant Prendas 1");
        defaultTableModel_Secado.addColumn("N° Orden 2");
        defaultTableModel_Secado.addColumn("Cant Prendas 2");
        defaultTableModel_Secado.addColumn("N° Orden 3");
        defaultTableModel_Secado.addColumn("Cant Prendas 3");
        defaultTableModel_Secado.addColumn("N° Secadora");
        defaultTableModel_Secado.addColumn("Responsable");
        defaultTableModel_Secado.addColumn("Estado");
        List<Operacion> allOperacionesSecado = operacionDao.getOperacionesByType("Secado");
        
        //CARGA DE OPERACIONES SECADO 
        if(!allOperacionesSecado.isEmpty()){
             for (Operacion op : allOperacionesSecado) {
                // Verificar que haya al menos un orden en la lista
                String numOrden1 = !op.getOrdenes().isEmpty() ? op.getOrdenes().get(0).getNumOrden() : "no hallado";
                String cantPrendas1 = !op.getOrdenes().isEmpty() ? String.valueOf(op.getOrdenes().get(0).getCantPrendas() ): "" ;

                // Verificar que haya al menos dos órdenes en la lista
                String numOrden2 = op.getOrdenes().size() > 1 ? op.getOrdenes().get(1).getNumOrden() : "no  hallado";
                String cantPrendas2 = op.getOrdenes().size() > 1 ? String.valueOf(op.getOrdenes().get(1).getCantPrendas()) : "" ;

                // Verificar que haya al menos tres órdenes en la lista
                String numOrden3 = op.getOrdenes().size() > 2 ? op.getOrdenes().get(2).getNumOrden() : "no  hallado";
                String cantPrendas3 = op.getOrdenes().size() > 2 ? String.valueOf(op.getOrdenes().get(2).getCantPrendas()) : "";

                String maquinaName = op.getMaquina() != null ?  op.getMaquina().getName(): "";
                String responsableName = op.getResponsable() != null ? op.getResponsable().getNombres() + "," + op.getResponsable().getApellidos(): "";
                
                
                String fecha = op.getFecha() != null ? op.getFecha().toLocalDate().toString(): ""; 
                String hora = op.getFecha() != null ? op.getFecha().toLocalTime().toString(): "";
                String local = op.getLocal() != null ? op.getLocal().getNombre(): "";
                
                Boolean estado = op.getEstadoOperacion() != null ? op.getEstadoOperacion() : false;
                // Añadir fila a la tabla con datos verificados
                defaultTableModel_Secado.addRow(
                    new Object[]{
                        op.getId().toString(),
                        fecha,
                        hora,
                        local,
                        numOrden1,
                        cantPrendas1,
                        numOrden2,
                        cantPrendas2,
                        numOrden3,
                        cantPrendas3,
                        maquinaName,
                        responsableName,
                        estado
                    }
                );
            }
            
        }

        jTable_procesoSecado.setModel(defaultTableModel_Secado);
        jTable_procesoSecado.getColumnModel().getColumn(0).setPreferredWidth(5);
        
        
        
    }
    
    private void limpiarCamposTabSecado(){
        // Obtener el valor de la primera columna y la última fila
        int lastRowIndex = jTable_procesoSecado.getRowCount() - 1;
        if (lastRowIndex >= 0) {
            Object value = jTable_procesoSecado.getValueAt(lastRowIndex, 0);
            //Convertir a String
            String valueStr = String.valueOf(value);
            
            //Convertir a Integer e incrementar
            int valueInt = Integer.parseInt(valueStr) +  1;
            
            //Asignar al jLabel
            jLabel_id_procesoSecado.setText(String.valueOf(valueInt));
           
        } else {
            jLabel_id_procesoSecado.setText("0");
        }
        
        jComboBox_local_procesoSecado.removeAllItems();
        
        jComboBox_numSecadora_procesoSecado.removeAllItems();
        
        jComboBox_responsable_procesoSecado.removeAllItems();
        
        jTextField_numOrden1_procesoSecado.setText("");
        jTextField_cantPrendas1_procesoSecado.setText("");
        jTextField_numOrden2_procesoSecado.setText("");
        jTextField_cantPrendas2_procesoSecado.setText("");
        jTextField_numOrden3_procesoSecado.setText("");
        jTextField_cantPrendas3_procesoSecado.setText("");
        jCheckBox_estado_procesoSecado.setSelected(false);
        cargarComboBoxesTabSecado();
    }

    private void cargarComboBoxesTabSecado() {
         List<Empleado> empleados = empleadoDAO.getAllEmpleados();
        List<Local> locales = localDAO.getAllLocales();
        
        empleados.forEach(emp -> jComboBox_responsable_procesoSecado.addItem(emp.getNombres()+ "," + emp.getApellidos()));
        locales.forEach(local -> jComboBox_local_procesoSecado.addItem(local.getNombre()) );
        
    }

}
