package com.slc.sw_formato_operaciones;

import com.slc.sw_formato_operaciones.DAO.EmpleadoDAO;
import com.slc.sw_formato_operaciones.DAO.LocalDAO;
import com.slc.sw_formato_operaciones.DAO.MaquinaDAO;
import com.slc.sw_formato_operaciones.DAO.OperacionDAO;
import javax.swing.JOptionPane;
import com.slc.sw_formato_operaciones.entities.Empleado;
import com.slc.sw_formato_operaciones.entities.Local;
import com.slc.sw_formato_operaciones.entities.Maquina;
import com.slc.sw_formato_operaciones.entities.Operacion;
import com.slc.sw_formato_operaciones.entities.Orden;
import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Clider Fernando Tutaya Rivera
 */
public class LavadoPanel extends javax.swing.JPanel {

    /**
     * Creates new form LavadoPanel
     */
    EmpleadoDAO empleadoDAO = new EmpleadoDAO();
    LocalDAO localDAO = new LocalDAO();
    MaquinaDAO maquinaDAO = new MaquinaDAO();
    OperacionDAO operacionDao = new OperacionDAO();
    
    DefaultTableModel defaultTableModel_Lavado = null;
    public LavadoPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jTextField_numOrden = new javax.swing.JTextField();
        jTextField_cantPrendas = new javax.swing.JTextField();
        jTextField_numOrden2 = new javax.swing.JTextField();
        jTextField_cantPrendas2 = new javax.swing.JTextField();
        jTextField_numOrden3 = new javax.swing.JTextField();
        jTextField_cantPrendas3 = new javax.swing.JTextField();
        jLabel_fecha = new javax.swing.JLabel();
        jLabel_id = new javax.swing.JLabel();
        jLabel_hora = new javax.swing.JLabel();
        jComboBox_local = new javax.swing.JComboBox<>();
        jComboBox_responsable = new javax.swing.JComboBox<>();
        jComboBox_numLavadora = new javax.swing.JComboBox<>();
        jCheckBox_estado = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ProcesoLavado = new javax.swing.JTable();
        jToggleButton_agregar_proceso_lavado = new javax.swing.JToggleButton();
        jButton_actualizar_proceso_lavado = new javax.swing.JButton();
        jButton_nuevo_proceso_lavado = new javax.swing.JButton();
        jButton_Eliminar_Proceso_Lavado = new javax.swing.JButton();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LAVADO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        jTextField_numOrden.setText("jTextField1");
        jTextField_numOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_numOrdenActionPerformed(evt);
            }
        });

        jTextField_cantPrendas.setText("jTextField1");

        jTextField_numOrden2.setText("jTextField1");

        jTextField_cantPrendas2.setText("jTextField1");

        jTextField_numOrden3.setText("jTextField1");
        jTextField_numOrden3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_numOrden3ActionPerformed(evt);
            }
        });

        jTextField_cantPrendas3.setText("jTextField1");

        jLabel_fecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_fecha.setText("Fecha");

        jLabel_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_id.setText("0");

        jLabel_hora.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_hora.setText("Hora");

        jComboBox_local.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_local.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_localItemStateChanged(evt);
            }
        });

        jComboBox_responsable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox_numLavadora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox_estado.setText("Procesado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_local, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField_numOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_cantPrendas, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_numOrden2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_cantPrendas2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_numOrden3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_cantPrendas3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_numLavadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_responsable, 0, 123, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_numOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_cantPrendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_numOrden2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_cantPrendas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_numOrden3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_cantPrendas3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_fecha)
                    .addComponent(jLabel_id)
                    .addComponent(jLabel_hora)
                    .addComponent(jComboBox_local, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_responsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_numLavadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox_estado))
                .addContainerGap())
        );

        jTable_ProcesoLavado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_ProcesoLavadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_ProcesoLavado);

        jToggleButton_agregar_proceso_lavado.setText("Agregar");
        jToggleButton_agregar_proceso_lavado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_agregar_proceso_lavadoActionPerformed(evt);
            }
        });

        jButton_actualizar_proceso_lavado.setText("Actualizar");
        jButton_actualizar_proceso_lavado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizar_proceso_lavadoActionPerformed(evt);
            }
        });

        jButton_nuevo_proceso_lavado.setText("Nuevo");
        jButton_nuevo_proceso_lavado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nuevo_proceso_lavadoActionPerformed(evt);
            }
        });

        jButton_Eliminar_Proceso_Lavado.setText("Eliminar");
        jButton_Eliminar_Proceso_Lavado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Eliminar_Proceso_LavadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jButton_nuevo_proceso_lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jToggleButton_agregar_proceso_lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Eliminar_Proceso_Lavado)
                .addGap(53, 53, 53)
                .addComponent(jButton_actualizar_proceso_lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton_agregar_proceso_lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_actualizar_proceso_lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_nuevo_proceso_lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Eliminar_Proceso_Lavado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1370, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_numOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_numOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_numOrdenActionPerformed

    private void jTextField_numOrden3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_numOrden3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_numOrden3ActionPerformed

    private void jComboBox_localItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_localItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            // Obtener el valor seleccionado
            String local = jComboBox_local.getSelectedItem().toString();

            System.out.println(local);
            // Limpiar las opciones anteriores del comboBox de lavadoras
            jComboBox_numLavadora.removeAllItems();

            // Consultar las máquinas en función del valor seleccionado y un tipo
            List<Maquina> maquinas = maquinaDAO.getMaquinaByLocalAndType(local, "lavadora");

            // Agregar las máquinas encontradas al comboBox
            maquinas.forEach(maquina -> jComboBox_numLavadora.addItem(maquina.getName()));
        }
    }//GEN-LAST:event_jComboBox_localItemStateChanged

    private void jTable_ProcesoLavadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ProcesoLavadoMouseClicked
        // TODO add your handling code here:
        int row = jTable_ProcesoLavado.getSelectedRow();

        String row_id = jTable_ProcesoLavado.getValueAt(row, 0).toString();
        String row_fecha = jTable_ProcesoLavado.getValueAt(row, 1).toString();
        String row_hora = jTable_ProcesoLavado.getValueAt(row, 2).toString();
        String row_local = jTable_ProcesoLavado.getValueAt(row, 3).toString();
        String row_numOrden1 = jTable_ProcesoLavado.getValueAt(row, 4).toString();
        String row_cantPrendas1 = jTable_ProcesoLavado.getValueAt(row, 5).toString();
        String row_numOrden2 = jTable_ProcesoLavado.getValueAt(row, 6).toString();
        String row_cantPrendas2 = jTable_ProcesoLavado.getValueAt(row, 7).toString();
        String row_numOrden3= jTable_ProcesoLavado.getValueAt(row, 8).toString();
        String row_cantPrendas3 = jTable_ProcesoLavado.getValueAt(row, 9).toString();
        String row_numLavadora = jTable_ProcesoLavado.getValueAt(row, 10).toString();
        String row_responsable = jTable_ProcesoLavado.getValueAt(row,11).toString();
        Boolean row_estado = (Boolean) jTable_ProcesoLavado.getValueAt(row, 12);

        System.out.print("valor del estado" + row_estado);
        jLabel_id.setText(row_id);
        jLabel_fecha.setText(row_fecha);
        jLabel_hora.setText(row_hora);
        jComboBox_local.setSelectedItem(row_local);
        jTextField_numOrden.setText(row_numOrden1);
        jTextField_cantPrendas.setText(row_cantPrendas1);
        jTextField_numOrden2.setText(row_numOrden2);
        jTextField_cantPrendas2.setText(row_cantPrendas2);
        jTextField_numOrden3.setText(row_numOrden3);
        jTextField_cantPrendas3.setText(row_cantPrendas3);
        jComboBox_numLavadora.setSelectedItem(row_numLavadora);
        jComboBox_responsable.setSelectedItem(row_responsable);
        jCheckBox_estado.setSelected(row_estado);

    }//GEN-LAST:event_jTable_ProcesoLavadoMouseClicked

    private void jToggleButton_agregar_proceso_lavadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_agregar_proceso_lavadoActionPerformed

        //Verificar que no este seleccionada una fila de la columna
        if(jTable_ProcesoLavado.getSelectedRow() == -1){

            String cboLocal = jComboBox_local.getSelectedItem().toString();

            String txtOrden1 = jTextField_numOrden.getText();
            String txtCant1 = !"".equals(jTextField_cantPrendas.getText()) ? jTextField_cantPrendas.getText() : "0";

            Orden orden1 = new Orden(txtOrden1,Integer.parseInt( txtCant1 ));

            String txtOrden2 = jTextField_numOrden2.getText();
            String txtCant2 = !"".equals(jTextField_cantPrendas2.getText()) ? jTextField_cantPrendas2.getText() : "0" ;

            Orden orden2 = new Orden(txtOrden2, Integer.parseInt(txtCant2));

            String txtOrden3 = jTextField_numOrden3.getText();
            String txtCant3 = !"".equals(jTextField_cantPrendas3.getText()) ? jTextField_cantPrendas3.getText() : "0" ;

            Orden orden3 = new Orden(txtOrden3, Integer.parseInt(txtCant3));

            String cboNumLavadora = jComboBox_numLavadora.getSelectedItem().toString();

            String cboResponsable = jComboBox_responsable.getSelectedItem().toString();

            Boolean checkEstado = jCheckBox_estado.isSelected();

            //Crear objetos a partir para la superclase Operacion:
            List<Orden> listaOrdenes = new ArrayList<>();
            listaOrdenes.add(orden1);
            listaOrdenes.add(orden2);
            listaOrdenes.add(orden3);

            if(!txtOrden1.isEmpty() || !txtOrden1.isEmpty() || !txtOrden1.isEmpty()){
                Local local = localDAO.getLocalByName(cboLocal);
                Maquina lavadora = maquinaDAO.getMaquinaByLocalAndTypeAndName( cboLocal, "lavadora", cboNumLavadora);

                Empleado empleado = empleadoDAO.getEmpleadoByNombresAndApellidos(cboResponsable.split(",")[0], cboResponsable.split(",")[1]);

                //Crear operacion
                Operacion operacion = new Operacion("Lavado", local, listaOrdenes, lavadora,empleado, checkEstado);

                //Asignar la operacion con la que cada entidad se corresponde para evitar errores de persistencia
                listaOrdenes.forEach(orden -> orden.setOperacion(operacion));

                try {
                    if(operacionDao.addOperacion(operacion)){
                        JOptionPane.showMessageDialog(this, "Registro Agregado", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
                        cargarTablaTabLavado();
                    }else{
                        JOptionPane.showMessageDialog(this, "No se pudo agregar el Registro, Verifique los Datos", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (HeadlessException e) {
                    System.out.println("Error al insertar orden" + e.getMessage());
                }

                limpiarTabLavado();
            }else{
                JOptionPane.showMessageDialog(this, "Ingrese al menos un Numero de Orden!", "Mensaje de Advertencia", JOptionPane.WARNING_MESSAGE);
            }

        }else{
            JOptionPane.showMessageDialog(this, "El registro ya Esta agregado", "Mensaje de Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jToggleButton_agregar_proceso_lavadoActionPerformed

    private void jButton_actualizar_proceso_lavadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizar_proceso_lavadoActionPerformed
        // TODO add your handling code here:
        int rowSelected = jTable_ProcesoLavado.getSelectedRow();
        //Buscar si operacion ya esta agregada como operacion secado
        if( rowSelected >= 0 ){
            // Obtener los datos de los componentes
            Long labelId = Long.valueOf(jLabel_id.getText() );
            String cboLocal = jComboBox_local.getSelectedItem().toString();

            String txtOrden1 = jTextField_numOrden.getText();
            String txtCant1 = jTextField_cantPrendas.getText();

            Orden orden1 = new Orden(txtOrden1,Integer.parseInt( txtCant1 ));

            String txtOrden2 = jTextField_numOrden2.getText();
            String txtCant2 = jTextField_cantPrendas2.getText();

            Orden orden2 = new Orden(txtOrden2, Integer.parseInt(txtCant2));

            String txtOrden3 = jTextField_numOrden3.getText();
            String txtCant3 = jTextField_cantPrendas3.getText();

            Orden orden3 = new Orden(txtOrden3, Integer.parseInt(txtCant3));

            String cboNumLavadora = jComboBox_numLavadora.getSelectedItem().toString();

            String cboResponsable = jComboBox_responsable.getSelectedItem().toString();

            Boolean estado = jCheckBox_estado.getModel().isSelected();

            List<Orden> listaOrdenes = new ArrayList<>();
            listaOrdenes.add(orden1);
            listaOrdenes.add(orden2);
            listaOrdenes.add(orden3);

            Local local = localDAO.getLocalByName(cboLocal);
            Maquina lavadora = maquinaDAO.getMaquinaByLocalAndTypeAndName( cboLocal, "lavadora", cboNumLavadora);

            String nombres = cboResponsable.split(",")[0];
            String apellidos = cboResponsable.split(",")[1];
            Empleado empleado = empleadoDAO.getEmpleadoByNombresAndApellidos(nombres, apellidos);

            //Crear operacion
            Operacion operacion = new Operacion( labelId,"Lavado", local, listaOrdenes, lavadora,empleado, estado);

            //Asignar la operacion con la que cada entidad se corresponde para evitar errores de persistencia
            listaOrdenes.forEach(orden -> orden.setOperacion(operacion));

            try {
                if(operacionDao.updateOperacion(operacion) == true){
                    JOptionPane.showMessageDialog(this, "Registro Actualizado con Exito.", "Mensaje de Informacion", JOptionPane.INFORMATION_MESSAGE);
                    cargarTablaTabLavado();
                }else{
                    JOptionPane.showMessageDialog(this, "No se pudo Actualizar el registro, Revise los datos", "Mensaje de Error", JOptionPane.ERROR_MESSAGE);

                }

            } catch (HeadlessException e) {
                System.out.println("Error al insertar orden" + e.getMessage());
            }

            limpiarTabLavado();

        }else{
            JOptionPane.showMessageDialog(null, "Seleccione un Registro para Actualizar", "Mensaje de Advertencia",JOptionPane.WARNING_MESSAGE );
        }

    }//GEN-LAST:event_jButton_actualizar_proceso_lavadoActionPerformed

    private void jButton_nuevo_proceso_lavadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nuevo_proceso_lavadoActionPerformed
        // TODO add your handling code here:
        limpiarTabLavado();
        cargarTablaTabLavado();

    }//GEN-LAST:event_jButton_nuevo_proceso_lavadoActionPerformed

    private void jButton_Eliminar_Proceso_LavadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Eliminar_Proceso_LavadoActionPerformed
        // TODO add your handling code here:
        int rowSelected = jTable_ProcesoLavado.getSelectedRow();

        if( rowSelected >= 0 ){

            int response = JOptionPane.showConfirmDialog(this, "¿Eliminar Registro?");

            if(response == JOptionPane.YES_OPTION){
                Long id = Long.valueOf(jTable_ProcesoLavado.getValueAt(rowSelected, 0).toString());
                try {
                    operacionDao.deleteOperacion(id);
                    limpiarTabLavado();
                    cargarTablaTabLavado();
                } catch (Exception e) {
                    System.out.println("Error al elminar Registro");
                }
            }else{
                System.out.println("No aceptado");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione un registro para eliminar", "Mensaje de Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_Eliminar_Proceso_LavadoActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
         Thread sp = new Thread(){
           public void run(){
               limpiarTabLavado();
               cargarTablaTabLavado();
           }
         };
         sp.start();
    }//GEN-LAST:event_formAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Eliminar_Proceso_Lavado;
    private javax.swing.JButton jButton_actualizar_proceso_lavado;
    private javax.swing.JButton jButton_nuevo_proceso_lavado;
    private javax.swing.JCheckBox jCheckBox_estado;
    private javax.swing.JComboBox<String> jComboBox_local;
    private javax.swing.JComboBox<String> jComboBox_numLavadora;
    private javax.swing.JComboBox<String> jComboBox_responsable;
    private javax.swing.JLabel jLabel_fecha;
    private javax.swing.JLabel jLabel_hora;
    private javax.swing.JLabel jLabel_id;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_ProcesoLavado;
    private javax.swing.JTextField jTextField_cantPrendas;
    private javax.swing.JTextField jTextField_cantPrendas2;
    private javax.swing.JTextField jTextField_cantPrendas3;
    private javax.swing.JTextField jTextField_numOrden;
    private javax.swing.JTextField jTextField_numOrden2;
    private javax.swing.JTextField jTextField_numOrden3;
    private javax.swing.JToggleButton jToggleButton_agregar_proceso_lavado;
    // End of variables declaration//GEN-END:variables

    private void limpiarTabLavado() {

        // Obtener el valor de la primera columna y la última fila
        int lastRowIndex = jTable_ProcesoLavado.getRowCount() - 1;
        if (lastRowIndex >= 0) {
            Object value = jTable_ProcesoLavado.getValueAt(lastRowIndex, 0);
            //Convertir a String
            String valueStr = String.valueOf(value);
            
            //Convertir a Integer e incrementar
            int valueInt = Integer.parseInt(valueStr) +  1;
            
            //Asignar al jLabel
            jLabel_id.setText(String.valueOf(valueInt));
           
        } else {
            jLabel_id.setText("No hay datos");
        }
        
        jComboBox_local.removeAllItems();
        
        jComboBox_numLavadora.removeAllItems();
        
        jComboBox_responsable.removeAllItems();
        
        jTextField_numOrden.setText("");
        jTextField_cantPrendas.setText("");
        jTextField_numOrden2.setText("");
        jTextField_cantPrendas2.setText("");
        jTextField_numOrden3.setText("");
        jTextField_cantPrendas3.setText("");
        jCheckBox_estado.setSelected(false);
        cargarComboBoxesTabLavado();
    }

    private void cargarComboBoxesTabLavado() {
        
        List<Empleado> empleados = empleadoDAO.getAllEmpleados();
        List<Local> locales = localDAO.getAllLocales();
        
        empleados.forEach(emp -> jComboBox_responsable.addItem(emp.getNombres()+ "," + emp.getApellidos()));
        locales.forEach(local -> jComboBox_local.addItem(local.getNombre()) );
        
        
    }

    private void cargarTablaTabLavado() {
        defaultTableModel_Lavado = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Hace que todas las celdas sean no editables
                }

                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    if (columnIndex == 12) { // La columna "Estado" que tiene booleanos es la columna 12
                        return Boolean.class;
                    }
                    return super.getColumnClass(columnIndex);
                }
        };
        
        defaultTableModel_Lavado.addColumn("N°");
        defaultTableModel_Lavado.addColumn("Fecha");
        defaultTableModel_Lavado.addColumn("Hora");
        defaultTableModel_Lavado.addColumn("Local");
        defaultTableModel_Lavado.addColumn("N° Orden 1");
        defaultTableModel_Lavado.addColumn("Cant Prendas 1");
        defaultTableModel_Lavado.addColumn("N° Orden 2");
        defaultTableModel_Lavado.addColumn("Cant Prendas 2");
        defaultTableModel_Lavado.addColumn("N° Orden 3");
        defaultTableModel_Lavado.addColumn("Cant Prendas 3");
        defaultTableModel_Lavado.addColumn("N° Lavadora");
        defaultTableModel_Lavado.addColumn("Responsable");
        defaultTableModel_Lavado.addColumn("Estado");
        
        List<Operacion> operaciones = operacionDao.getOperacionesByType("Lavado");
        
        
        if (!operaciones.isEmpty()) {
            for (Operacion op : operaciones) {
                // Verificar que haya al menos un orden en la lista
                String numOrden1 = !op.getOrdenes().isEmpty() ? op.getOrdenes().get(0).getNumOrden() : "";
                String cantPrendas1 = !op.getOrdenes().isEmpty() ? String.valueOf(op.getOrdenes().get(0).getCantPrendas() ): "" ;

                // Verificar que haya al menos dos órdenes en la lista
                String numOrden2 = op.getOrdenes().size() > 1 ? op.getOrdenes().get(1).getNumOrden() : "";
                String cantPrendas2 = op.getOrdenes().size() > 1 ? String.valueOf(op.getOrdenes().get(1).getCantPrendas()) : "" ;

                // Verificar que haya al menos tres órdenes en la lista
                String numOrden3 = op.getOrdenes().size() > 2 ? op.getOrdenes().get(2).getNumOrden() : "";
                String cantPrendas3 = op.getOrdenes().size() > 2 ? String.valueOf(op.getOrdenes().get(2).getCantPrendas()) : "";

                String maquinaName = op.getMaquina() != null ?  op.getMaquina().getName(): "";
                String responsableName = op.getResponsable() != null ? op.getResponsable().getNombres() + "," + op.getResponsable().getApellidos(): "";
                Boolean estado = op.getEstadoOperacion() != null ? op.getEstadoOperacion() : false;
                
                String fecha = op.getFecha() != null ? op.getFecha().toLocalDate().toString(): ""; 
                String hora = op.getFecha() != null ? op.getFecha().toLocalTime().toString(): "";
                String local = op.getLocal() != null ? op.getLocal().getNombre(): "";
                // Añadir fila a la tabla con datos verificados
                defaultTableModel_Lavado.addRow(
                    new Object[]{
                        op.getId().toString(),
                        fecha,
                        hora,
                        local,
                        numOrden1,
                        cantPrendas1,
                        numOrden2,
                        cantPrendas2,
                        numOrden3,
                        cantPrendas3,
                        maquinaName,
                        responsableName,
                        estado
                    }
                );
            }
            
            
        }

        jTable_ProcesoLavado.setModel(defaultTableModel_Lavado);
        jTable_ProcesoLavado.getColumnModel().getColumn(0).setPreferredWidth(5);
        
        
        
    }
}
